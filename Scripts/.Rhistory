mean(x)
mean(y)
wilcox.test(x = richness.by.phylum.by.point %>%
filter(Year == 2017, Area == "San Juan Island", phylum == "Bacillariophyta") %>%
pull(richness),
y = richness.by.phylum.by.point %>%
filter(Year == 2095, Area == "San Juan Island", phylum == "Bacillariophyta") %>%
pull(richness))
t.test(x = richness.by.phylum.by.point %>%
filter(Year == 2017, Area == "San Juan Island", phylum == "Bacillariophyta") %>%
pull(richness),
y = richness.by.phylum.by.point %>%
filter(Year == 2095, Area == "San Juan Island", phylum == "Bacillariophyta") %>%
pull(richness))
length(x)
length(y)
richness.by.phylum.by.point
library(tidyverse)
library(rstanarm)
options(mc.cores = parallel::detectCores())
library(loo)
library (here)
###LOAD DATA
data.for.stan <- read_csv(here("Input","data.for.stan.csv"))
#create random subset of taxa on which to do preliminary model testing
allTax <- unique(data.for.stan$taxa)
set.seed(108)
subsetTax <- allTax[sample(1:length(allTax), 50)]
#prep stan input
stan.input <- data.for.stan %>%
filter(taxa %in% subsetTax) %>%
group_by(Area) %>%
mutate(Temperature = vegan::decostand(Temperature, method = "standardize"),
pH = vegan::decostand(pH, method = "standardize"),
Salinity = vegan::decostand(Salinity, method = "standardize")) %>%
group_by(taxa) %>%
mutate(Noccur = sum(binary)) %>%
filter(Noccur > 7 & Noccur < 69) %>%  #must be present or absent in at least 10% of 76 samples in dataset
dplyr::select(-c(sample, phylum, DIC, Noccur)) %>%
ungroup() %>%
unite(Area, taxa, col = "AreaTaxa", remove = F) %>%
mutate(sampleIndex = 1:nrow(.),
taxonIndex = match(taxa, unique(taxa)),
areaIndex = match(Area, unique(Area)),
seasonIndex = match(Season, unique(Season)),
taxonAreaIndex = match(AreaTaxa, unique(AreaTaxa))) %>%   #unique combinations of taxon and area
dplyr::select(-AreaTaxa)
t_prior <- student_t(df = 7, location = 0, scale = 2.5)
#models fitting one intercept per unique area/taxon combination, plus
#a different slope for the effect of environmental variables on each taxon.
mod1.3vars <- stan_glmer(binary ~ 0 + (0 + Temperature + pH + Salinity | taxa) + (1 | taxonAreaIndex),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod1.2vars <- stan_glmer(binary ~ 0 + (0 + Temperature + pH | taxa) + (1 | taxonAreaIndex),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod1.1vars.pH <- stan_glmer(binary ~ 0 + (0 + pH | taxa) + (1 | taxonAreaIndex),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod1.1vars.Temperature <- stan_glmer(binary ~ 0 + (0 + Temperature | taxa) + (1 | taxonAreaIndex),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
#models fitting one intercept per taxon, plus
#a different slope for the effect of environmental variables on each taxon. No Area term.
mod2.3vars <- stan_glmer(binary ~ 0 + (0 + Temperature + pH + Salinity | taxa) + (1 | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod2.2vars <- stan_glmer(binary ~ 0 + (0 + Temperature + pH | taxa) + (1 | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod2.1vars.pH <- stan_glmer(binary ~ 0 + (0 + pH | taxa) + (1 | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod2.1vars.Temperature <- stan_glmer(binary ~ 0 + (0 + Temperature | taxa) + (1 | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
#models fitting a different slope for the effect of environmental variables on each taxon, with no intercept term.
mod3.3vars <- stan_glmer(binary ~ 0 + (0 + Temperature + pH + Salinity | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod3.2vars <- stan_glmer(binary ~ 0 + (0 + Temperature + pH | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod3.1vars.pH <- stan_glmer(binary ~ 0 + (0 + pH | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
mod3.1vars.Temperature <- stan_glmer(binary ~ 0 + (0 + Temperature | taxa),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 2,
adapt_delta = 0.99,
refresh = 0)
#compare model results
loo_compare(waic(mod1.3vars),
waic(mod1.2vars),
waic(mod1.1vars.pH),
waic(mod1.1vars.Temperature),
waic(mod2.3vars),
waic(mod2.2vars),
waic(mod2.1vars.pH),
waic(mod2.1vars.Temperature),
waic(mod3.3vars),
waic(mod3.2vars),
waic(mod3.1vars.pH),
waic(mod3.1vars.Temperature)
)
stan.input <- data.for.stan %>%
group_by(Area) %>%
mutate(Temperature = vegan::decostand(Temperature, method = "standardize"),
pH = vegan::decostand(pH, method = "standardize"),
Salinity = vegan::decostand(Salinity, method = "standardize")) %>%
group_by(taxa) %>%
mutate(Noccur = sum(binary)) %>%
filter(Noccur > 7 & Noccur < 69) %>%  #must be present or absent in at least 10% of 76 samples in dataset
dplyr::select(-c(sample, phylum, DIC, Noccur)) %>%
ungroup() %>%
unite(Area, taxa, col = "AreaTaxa", remove = F) %>%
mutate(sampleIndex = 1:nrow(.),
taxonIndex = match(taxa, unique(taxa)),
areaIndex = match(Area, unique(Area)),
seasonIndex = match(Season, unique(Season)),
taxonAreaIndex = match(AreaTaxa, unique(AreaTaxa))) %>%   #unique combinations of taxon and area
dplyr::select(-AreaTaxa)
finalModel <- stan_glmer(binary ~ 0 + (0 + Temperature + pH | taxa) + (1 | taxonAreaIndex),
data = stan.input,
family = "binomial",
prior = t_prior,
prior_intercept = t_prior,
chains = 4,
adapt_delta = 0.99,
refresh = 0)
stan.input$postpredict <- posterior_predict(finalModel) %>% colMeans()
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
facet_grid(taxa ~ Area) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
stan.input %>%
filter(taxa == "Gonyaulacaceae|Alexandrium|NA") %>%
#filter(taxa %in% unique(taxa)[1:5]) %>%
dplyr::select(pH, Temperature, taxa, Area, binary, postpredict) %>%
pivot_longer(c(pH, Temperature)) %>%
ggplot(aes(x = value, y = binary)) +
geom_point() +
geom_point(aes(x = value, y = postpredict), color = "blue") +
facet_grid(name ~ Area) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Alexandrium")
save(file = "ModelTest_fits.Rdata")
save.image(file = "ModelTest_fits.Rdata")
stan.input %>%
filter(taxa == "Gonyaulacaceae|Alexandrium|NA") %>%
#filter(taxa %in% unique(taxa)[1:5]) %>%
dplyr::select(pH, Temperature, taxa, Area, binary, postpredict) %>%
pivot_longer(c(pH, Temperature)) %>%
ggplot(aes(x = value, y = binary)) +
geom_point() +
geom_point(aes(x = value, y = postpredict), color = "blue") +
geom_smooth(aes(x = value, y = postpredict), color = "blue") +
facet_grid(name ~ Area) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Alexandrium")
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = value, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
stan.input %>%
filter(taxa == "Gonyaulacaceae|Alexandrium|NA") %>%
#filter(taxa %in% unique(taxa)[1:5]) %>%
dplyr::select(pH, Temperature, taxa, Area, binary, postpredict) %>%
pivot_longer(c(pH, Temperature)) %>%
ggplot(aes(x = value, y = binary)) +
geom_point() +
geom_point(aes(x = value, y = postpredict), color = "blue") +
geom_smooth(aes(x = value, y = postpredict), color = "blue", method = "lm") +
facet_grid(name ~ Area) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Alexandrium")
library(tidyverse)
library(rstanarm)
options(mc.cores = parallel::detectCores())
library(loo)
library (here)
###LOAD DATA
data.for.stan <- read_csv(here("Input","data.for.stan.csv"))
#create random subset of taxa on which to do preliminary model testing
allTax <- unique(data.for.stan$taxa)
set.seed(108)
subsetTax <- allTax[sample(1:length(allTax), 50)]
#prep stan input
stan.input <- data.for.stan %>%
filter(taxa %in% subsetTax) %>%
group_by(Area) %>%
mutate(Temperature = vegan::decostand(Temperature, method = "standardize"),
pH = vegan::decostand(pH, method = "standardize"),
Salinity = vegan::decostand(Salinity, method = "standardize")) %>%
group_by(taxa) %>%
mutate(Noccur = sum(binary)) %>%
filter(Noccur > 7 & Noccur < 69) %>%  #must be present or absent in at least 10% of 76 samples in dataset
dplyr::select(-c(sample, phylum, DIC, Noccur)) %>%
ungroup() %>%
unite(Area, taxa, col = "AreaTaxa", remove = F) %>%
mutate(sampleIndex = 1:nrow(.),
taxonIndex = match(taxa, unique(taxa)),
areaIndex = match(Area, unique(Area)),
seasonIndex = match(Season, unique(Season)),
taxonAreaIndex = match(AreaTaxa, unique(AreaTaxa))) %>%   #unique combinations of taxon and area
dplyr::select(-AreaTaxa)
#if loading data from previous model runs
load(file = "ModelTest_fits.Rdata")
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
distinct(taxa)
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
gsub("|", "\n", taxa)
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
gsub("|", "\n", taxa)
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
gsub("|", "\n", .$taxa)
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
gsub("\|", "\n", .$taxa)
stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5]) %>%
gsub("\\|", "\n", .$taxa)
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
gsub("\\|", "\n", tmp$taxa)
tmp$taxa <- gsub("\\|", "\n", tmp$taxa)
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=4/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=5/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=10/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=3/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=1/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
tmp$taxa <- gsub("Bacillariophyta|", "", tmp$taxa) #for ease of reading labels, insert newlines
tmp$taxa <- gsub("\\|", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=1/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
tmp$taxa <- gsub(".|", "", tmp$taxa) #for ease of reading labels, insert newlines
tmp$taxa <- gsub("\\|", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=1/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
tmp$taxa
gsub(".|", "", tmp$taxa)
gsub(".\\|", "", tmp$taxa)
gsub(".+|", "", tmp$taxa)
gsub(".+\\|", "", tmp$taxa)
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
tmp$taxa <- gsub(".+\\|", "", tmp$taxa) #for ease of reading labels, remove family name
tmp$taxa <- gsub("\\|", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=1/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
tmp$taxa <- gsub(".+\\|", "", tmp$taxa) #for ease of reading labels, remove family name
tmp$taxa <- gsub(" ", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=1/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
#tmp$taxa <- gsub(".+\\|", "", tmp$taxa) #for ease of reading labels, remove family name
tmp$taxa <- gsub("|", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp$taxa <- gsub(" ", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=1/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
gsub("|", "\n", tmp$taxa)
gsub("\\|", "\n", tmp$taxa)
tmp <- stan.input %>%
left_join(data.for.stan[,c("taxa", "phylum")]) %>%
filter(phylum == "Bacillariophyta") %>%
filter(taxa %in% unique(taxa)[1:5])
#tmp$taxa <- gsub(".+\\|", "", tmp$taxa) #for ease of reading labels, remove family name
tmp$taxa <- gsub("\\|", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp$taxa <- gsub(" ", "\n", tmp$taxa) #for ease of reading labels, insert newlines
tmp %>%
ggplot(aes(x = pH, y = binary)) +
geom_point() +
geom_point(aes(x = pH, y = postpredict), color = "blue") +
geom_smooth(aes(x = pH, y = postpredict), color = "blue", method = "lm") +
facet_grid(taxa ~ Area) +
theme(aspect.ratio=1/3) +
ylab("Prob of Presence") +
xlab("pH (Standardized)") +
ggtitle("Selected Diatom Taxa")
